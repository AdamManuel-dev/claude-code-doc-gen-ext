// Edge case test file

// Empty function
/**
 * Emptyfunction.
 * @returns {*} The result.
 */
function emptyFunction() {}

// Function with existing partial JSDoc
/**
 * This already has a description
 */
/**
 * Partiallydocumented.
 * @param {*} a - The a.
 * @param {*} b - The b.
 * @returns {*} The result.
 */
function partiallyDocumented(a, b) {
    return a + b;
}

// Nested functions
/**
 * Outerfunction.
 * @returns {*} The result.
 */
function outerFunction() {
    /**
     * Innerfunction.
     * @returns {*} The result.
     */
    function innerFunction() {
        return "nested";
    }
    return innerFunction();
}

// Function with destructured parameters
/**
 * Destructuredparams.
 * @param {*} name - The name.
 * @param {*} age - The age.
 * @param {*} city - The city.
 * @returns {*} The result.
 */
function destructuredParams({name, age, city = "Unknown"}) {
    return `${name} is ${age} from ${city}`;
}

// Function with rest parameters
/**
 * Restparams.
 * @param {*} first - The first.
 * @param {*} ...rest - The ...rest.
 * @returns {*} The result.
 */
function restParams(first, ...rest) {
    return [first, ...rest];
}

// Empty class
/**
 * Emptyclass.
 */
class EmptyClass {}

// Method that looks like control flow
/**
 * Parser.
 */
class Parser {
    if(condition) {
        // This is actually a method named 'if'
        return condition;
    }
}

// Arrow function with no parentheses
/**
 * Singleparam.
 * @returns {*} The result.
 */
const singleParam = x => x * 2;

// IIFE
(function() {
    console.log("IIFE");
})();

// Object method shorthand
const obj = {
    method() {
        return "shorthand";
    }
};